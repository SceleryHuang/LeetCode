class Solution(object):          
    def generate(self, numRows):
        """
        :type numRows: int
        :rtype: List[List[int]]
        """
#         def triangles():    
#             N = [1]
#             while True:
#                 yield N
#                 N.append(0)
#                 N = [N[i-1]+N[i]for i in range(len(N))]      
#         A = []
#         n = 0
        
#         for t in triangles():
#             print(t)
#             n = n+1
        
#             print(A)
#             if n == numRows:
#                 A.append(t)
#                 print(A)
#                 break
                
#         return A
    
        A = [[1] for i in range(numRows)]
        if numRows == 0:
            return []
        if numRows == 1:
            return [[1]]
        if numRows == 2:
            return [[1], [1, 1]]

        A[1].append(1)
        print(A)
        for i in range(2, numRows):
            A[i][0] = 1
            for j in range(1, i):
                A[i].append(A[i - 1][j] + A[i - 1][j - 1])
            A[i].append(1)
        return A



        
      
