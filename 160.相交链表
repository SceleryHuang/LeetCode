# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution(object):
    def getIntersectionNode(self, headA, headB):
        """
        :type head1, head1: ListNode
        :rtype: ListNode
        """
#         方法一
        # p = headA
        # q = headB
        # while p!=q:
        #     p = headB if p == None else p.next
        #     q = headA if q == None else q.next
        # return p
        
        #         方法二
        lenA,lenB = 0,0
        pa = headA
        pb = headB
        
        while pa:
            pa = pa.next
            lenA +=1
        while pb:
            pb = pb.next
            lenB +=1
        pa = headA
        pb = headB
        if lenA >lenB:
            for i in range(lenA-lenB):
                pa = pa.next
        else:
            for i in range(lenB-lenA):
                pb = pb.next
        while pa!= pb:
            pa = pa.next
            pb = pb.next
        return pa
