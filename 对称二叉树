# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, x):
#         self.val = x
#         self.left = None
#         self.right = None

class Solution:
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        # if root == None:
        #     return False
        # else:
        #     p = root.left
        #     q = root.right
        #     while p and q:
        #         if p.val ==q.val:
        #             p=p.left
        #             q= q.right
        #         else:
        #             return False
        #     return True
        
        def issame(p1,p2):
            if not p1 and not p2:
                return True
            if(p1 and p2) and p1.val ==p2.val:
                return issame(p1.left,p2.right) and issame(p1.right,p2.left)
            return False
        
        if not root:
            return True
        if not root.left and root.right:
            return False
        if not root.right and root.left:
            return False
        return issame(root.right,root.left)
