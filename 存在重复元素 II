from collections import Counter
class Solution(object):
    def containsNearbyDuplicate(self, nums, k):
        """
        :type nums: List[int]
        :type k: int
        :rtype: bool
        """
# 方法一：自己做的效率太低
#         if nums == []:
#             return False
#         if len(nums) == 1:
#             return False
#         if len(nums) == 2 and nums[0]!=nums[1]:
#             return False
        
#         commom = 0
#         dic = collections.Counter(nums)
#         # print(dic)
#         if dic.most_common()[0][1] >=2:
#             common = dic.most_common()[0][0]
#             l = [i for i,x in enumerate(nums) if x == common]
#             print(l)
#             for i in range(len(l)):
#                 for j in range(i+1,len(l)):
#                     if -k<=l[i]-l[j]<=k:
#                         return True
#             return False
#         else:
#             return False
                
     
        dic={}
        for i in range(len(nums)):
            if nums[i] not in dic:
                dic[nums[i]] =i
                print(dic)
            else:
                if i-dic[nums[i]]<=k:
                    return True
                else:
                    dic[nums[i]]=i
        return False                

        
